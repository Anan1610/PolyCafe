<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>🎯 GIỚI THIỆU PHẦN MỀM QUẢN LÝ BÁN HÀNG

Phần mềm Quản Lý Bán Hàng là một ứng dụng được xây dựng nhằm hỗ trợ các cửa hàng, quán cà phê, và siêu thị mini trong việc quản lý toàn bộ quy trình bán hàng một cách chuyên nghiệp và hiệu quả. Hệ thống được phát triển bằng C# WinForms kết hợp với SQL Server, cung cấp giao diện thân thiện và dễ sử dụng, phù hợp với cả nhân viên và quản trị viên.

🎁 Các chức năng chính:

Quản lý loại sản phẩm: Dễ dàng thêm, sửa, xóa các danh mục sản phẩm như nước uống, đồ ăn, bánh ngọt…
Quản lý sản phẩm: Nhập và cập nhật thông tin chi tiết sản phẩm: tên, giá, số lượng, loại.
Quản lý nhân viên: Theo dõi thông tin, phân quyền nhân viên (Admin/Nhân viên).
Lập phiếu bán hàng: Tạo hóa đơn, chọn sản phẩm, nhập số lượng, tính tiền và lưu vào hệ thống.
Xem chi tiết phiếu: Tra cứu các mặt hàng đã bán theo từng hóa đơn.
Thống kê doanh thu: Thống kê theo loại sản phẩm hoặc theo từng nhân viên trong khoảng thời gian tùy chọn.
Báo cáo nhanh: Xem nhanh tình hình hoạt động trong ngày: số hóa đơn, doanh thu, sản phẩm bán chạy nhất.
Quản lý đăng nhập: Hệ thống phân quyền, đăng nhập bảo mật với vai trò Admin hoặc Nhân viên.
Đặt lại mật khẩu: Admin có thể dễ dàng cấp lại mật khẩu cho nhân viên khi cần thiết.
Giao diện chính &amp; màn hình chào mừng: Giao diện hiện đại, trực quan, chuyển tiếp mượt mà từ màn hình chào mừng đến đăng nhập.

✅ Ưu điểm nổi bật:

Giao diện trực quan, dễ sử dụng.
Bảo mật thông tin người dùng và dữ liệu bán hàng.
Hỗ trợ thống kê trực quan bằng biểu đồ.
Phân quyền rõ ràng giữa Admin và Nhân viên.
Hệ thống hoạt động mượt mà, phản hồi nhanh.</value>
  </data>
</root>